#!/usr/bin/python3
import sys
import requests as r
import argparse
import time
from multiprocessing import Process
from pathlib import Path
import os
import getpass


class bcolors:
    HEADER = '\033[95m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    END = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


def success_print(title, body):
    print(bcolors.BOLD + bcolors.BLUE + "Title: " + bcolors.END,
          bcolors.GREEN + title + bcolors.END)
    print()
    print(bcolors.BOLD + bcolors.BLUE + "Body: " + bcolors.END,
          bcolors.GREEN + body + bcolors.END)


def error_print(comment):
    print(bcolors.BOLD + bcolors.FAIL +
          "Umm this is embarassing but there is an error." + bcolors.END)
    print(bcolors.BOLD + bcolors.BLUE + "Reason: " + bcolors.END,
          bcolors.GREEN + comment + bcolors.END)


def animation():
    print(bcolors.BOLD + "Processing... " + bcolors.END)
    animationString = "|/-\\"
    idx = 0
    while True:
        print(animationString[idx % len(animationString)], end="\r")
        idx += 1
        time.sleep(0.1)


def get_credentials():
    credentialsFile = Path("/home/vbhv/bin/.credentials")
    if(credentialsFile.is_file()):
        f = open("/home/vbhv/bin/.credentials", 'rb')
        credentials = f.read()
        credentials = credentials.decode('utf-8').split('::')
        (username, passwd) = (credentials[0], credentials[1])
        animateProcess = Process(target=animation)
        animateProcess.start()
        res = r.post("http://clipboard-api.herokuapp.com/gettoken/" +
                     str(username), json={'passwd': passwd})
        sCode = res.status_code
        res = res.json()['results']
        animateProcess.terminate()
        if sCode == 200 and res['Success']:
            return [username, passwd, res["userToken"]]
        else:
            return [None, None, None]
    else:
        return [None, None, None]


def add_page(reqUrl, jsonObj):
    animateProcess = Process(target=animation)
    animateProcess.start()
    if(jsonObj != None):
        res = r.post(reqUrl, json=jsonObj)
    else:
        res = r.get(reqUrl)
    sCode = res.status_code
    res = res.json()['results']
    animateProcess.terminate()

    return [sCode, res]


def print_page(sCode, res, username):
    if sCode == 200 and res['Success']:
        outTitle = res['pageTitle']
        body = res['pageBody']
        if(username != None):
            print(bcolors.BOLD + bcolors.WARNING + "Done!", username)
        else:
            print(bcolors.BOLD + bcolors.WARNING + "Done!" + bcolors.END)
        success_print(outTitle, body)
    else:
        comment = res["Comment"]
        error_print(comment)


ap = argparse.ArgumentParser()
ap.add_argument("-m", "--method", required=True,
                help="method to be used")
ap.add_argument("-t", "--title", required=False,
                help="title for the page [optional]")
ap.add_argument("-u", "--url", required=False,
                help="url of the page")
ap.add_argument("-n", "--username", required=False,
                help="username of the user")
args = vars(ap.parse_args())

method = args["method"]
url = args["url"]
inTitle = args["title"]
username = args["username"]

if (method == "get"):
    if(url == None):
        comment = "Url is not provided"
        error_print(comment)
    else:
        storedCredentials = get_credentials()
        (username, passwd, userToken) = (
            storedCredentials[0], storedCredentials[1], storedCredentials[2])
        if(username != None):
            print('pass')
        else:
            reqUrl = "http://clipboard-api.herokuapp.com/public/" + str(url)
            pageData = add_page(reqUrl, None)
            (sCode, res) = (pageData[0], pageData[1])
            print_page(sCode, res, None)

elif(method == "add"):
    if(inTitle == None):
        inTitle = ""
    if(url == None):
        comment = "Url is not provided"
        error_print(comment)
    else:
        storedCredentials = get_credentials()
        (username, passwd, userToken) = (
            storedCredentials[0], storedCredentials[1], storedCredentials[2])
        if(username != None):
            if(userToken == None):
                comment = res["Comment"]
                error_print(comment)
            else:
                print(bcolors.BOLD + "Enter Body text:" + bcolors.END)
                body = input().strip()
                reqUrl = "http://clipboard-api.herokuapp.com/private/addpage/" + \
                    str(username) + "/" + str(url)
                jsonObj = {'userToken': userToken,
                           'pageTitle': inTitle, 'pageBody': body}
                pageData = add_page(reqUrl, jsonObj)
                (sCode, res) = (pageData[0], pageData[1])
                print_page(sCode, res, res["Username"])
        else:
            print(bcolors.BOLD + "Enter Body text:" + bcolors.END)
            body = input().strip()
            reqUrl = "http://clipboard-api.herokuapp.com/public/" + str(url)
            jsonObj = {'pageTitle': inTitle, 'pageBody': body}
            pageData = add_page(reqUrl, jsonObj)
            (sCode, res) = (pageData[0], pageData[1])
            print_page(sCode, res, None)

elif(method == "login"):
    storedCredentials = get_credentials()
    if(storedCredentials[0] != None):
        print(bcolors.FAIL +
              "You are already logged in as", username)
        print(bcolors.HEADER +
              "Logout to login with another username" + bcolors.END)
    else:
        print(bcolors.BOLD)
        passwd = getpass.getpass()
        reqUrl = "http://clipboard-api.herokuapp.com/gettoken/" + str(username)
        jsonObj = {'passwd': passwd}
        pageData = add_page(reqUrl, jsonObj)
        (sCode, res) = (pageData[0], pageData[1])
        if sCode == 200 and res['Success']:
            secret = username + "::" + passwd
            f = open("/home/vbhv/bin/.credentials", 'w')
            f.write(str(secret))
            f.close()
            print(bcolors.GREEN + "You are logged in now. All the notes made will be private by default." + bcolors.END)
        else:
            comment = res["Comment"]
            error_print(comment)

elif(method == "logout"):
    os.remove('/home/vbhv/bin/.credentials')
    print(bcolors.GREEN + "Logged out." + bcolors.END)

elif(method == "signup"):
    if(username == None):
        comment = "Username is not provided"
        error_print(comment)
    else:
        print(bcolors.BOLD + "Enter name of the user:" + bcolors.END)
        name = input().strip()
        print(bcolors.BOLD)
        passwd = getpass.getpass()
        reqUrl = "http://clipboard-api.herokuapp.com/adduser/" + str(username)
        jsonObj = {'passwd': passwd, 'name': name}
        pageData = add_page(reqUrl, jsonObj)
        (sCode, res) = (pageData[0], pageData[1])
        if sCode == 200 and res['Success']:
            print(bcolors.GREEN + "User created!" + bcolors.END)
        else:
            comment = res["Comment"]
            error_print(comment)

else:
    print(bcolors.BOLD + bcolors.FAIL +
          "Sorry bro.. that's not a method. Try clipboard --help" + bcolors.END)
