#!/usr/bin/python3
import sys
import requests as r
import argparse
import time
from multiprocessing import Process
from pathlib import Path
import os


class bcolors:
    HEADER = '\033[95m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    END = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


def successPrint(title, body):
    print(bcolors.BOLD + bcolors.BLUE + "Title: " + bcolors.END,
          bcolors.GREEN + title + bcolors.END)
    print()
    print(bcolors.BOLD + bcolors.BLUE + "Body: " + bcolors.END,
          bcolors.GREEN + body + bcolors.END)


def errorPrint(comment):
    print(bcolors.BOLD + bcolors.FAIL +
          "Umm this is embarassing but there is an error." + bcolors.END)
    print(bcolors.BOLD + bcolors.BLUE + "Reason: " + bcolors.END,
          bcolors.GREEN + comment + bcolors.END)


def animation():
    print(bcolors.BOLD + "Processing... " + bcolors.END)
    animationString = "|/-\\"
    idx = 0
    while True:
        print(animationString[idx % len(animationString)], end="\r")
        idx += 1
        time.sleep(0.1)


ap = argparse.ArgumentParser()
ap.add_argument("-m", "--method", required=True,
                help="method to be used")
ap.add_argument("-t", "--title", required=False,
                help="title for the page [optional]")
ap.add_argument("-u", "--url", required=False,
                help="url of the page")
ap.add_argument("-n", "--username", required=False,
                help="username of the user")
args = vars(ap.parse_args())

method = args["method"]
url = args["url"]
inTitle = args["title"]
username = args["username"]

if (method == "get"):
    animateProcess = Process(target=animation)
    animateProcess.start()
    res = r.get("http://clipboard-api.herokuapp.com/public/" + str(url))
    sCode = res.status_code
    res = res.json()['results']
    animateProcess.terminate()
    if sCode == 200 and res['Success']:
        outTitle = res['pageTitle']
        body = res['pageBody']
        successPrint(outTitle, body)
    else:
        comment = res["Comment"]
        errorPrint(comment)

elif(method == "add"):
    print(bcolors.BOLD + "Enter Body text:" + bcolors.END)
    body = input().strip()
    animateProcess = Process(target=animation)
    animateProcess.start()
    res = r.post("http://clipboard-api.herokuapp.com/public/" +
                 str(url), json={'pageBody': body, 'pageTitle': inTitle})
    sCode = res.status_code
    res = res.json()['results']
    animateProcess.terminate()
    if sCode == 200 and res['Success']:
        outTitle = res['pageTitle']
        body = res['pageBody']
        print(bcolors.BOLD + bcolors.WARNING +
              "Done!" + bcolors.END)
        successPrint(outTitle, body)
    else:
        comment = res["Comment"]
        errorPrint(comment)

elif(method == "login"):
    credentialsFile = Path("/home/vbhv/bin/.credentials")
    if(credentialsFile.is_file()):
        f = open("/home/vbhv/bin/.credentials", 'rb')
        credentials = f.read()
        username = credentials.decode('utf-8').split('::')[0]
        print(bcolors.FAIL +
              "You are already logged in as", username)
        print()
        print(bcolors.HEADER +
              "Logout to login with another username" + bcolors.END)
    else:
        print(bcolors.BOLD + "Enter password:" + bcolors.END)
        passwd = input().strip()
        secret = username + "::" + passwd
        f = open("/home/vbhv/bin/.credentials", 'w')
        f.write(str(secret))
        f.close()
        print(bcolors.GREEN + "You are logged in now." + bcolors.END)

elif(method == "logout"):
    os.remove('/home/vbhv/bin/.credentials')
    print(bcolors.GREEN + "Logged out." + bcolors.END)

else:
    print(bcolors.BOLD + bcolors.FAIL +
          "Sorry bro.. that's not a method. Try clipboard --help" + bcolors.END)
